@page "/battleshipgame"
@inject IEngine Engine

<h3>BattleshipGame</h3>

<div>
<button @onclick="StartGame">Play</button>
</div>

<div class="container gridcontainer">
    <div class="row">
        <div class="col-sm-5 grid-column">
            <h3>Player 1</h3>
            <Grid squares=JoeGrid Size="GridSize"/>
        </div>
        <div class="col-sm-5 grid-column">
            <h3>Player 2</h3>
            <Grid squares=KimGrid Size="GridSize"/>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-5 grid-column">
            <Grid squares=JoeOpGrid Size="GridSize" />
        </div>
        <div class="col-sm-5 grid-column">
            <Grid squares=KimOpGrid Size="GridSize" />
        </div>
    </div>
</div>

@code {        

    IPlayer Joe;
    IPlayer Kim;

    SquareStates[,] JoeGrid =>
        Joe == null ? new SquareStates[10, 10] : Joe.PlayerGrid.GetSquares();
    SquareStates[,] JoeOpGrid =>
        Joe == null ? new SquareStates[10, 10] : Joe.OpponentGrid.GetSquares();
    SquareStates[,] KimGrid =>
        Joe == null ? new SquareStates[10, 10] : Kim.PlayerGrid.GetSquares();
    SquareStates[,] KimOpGrid =>
        Joe == null ? new SquareStates[10, 10] : Kim.OpponentGrid.GetSquares();

    int GridSize =>
        Joe == null ? 10 : Joe.PlayerGrid.Size;

    public void StartGame()
    {
        Engine.Play(Joe, Kim);
        Engine.Play(Kim, Joe);
    }

    protected override async Task OnInitializedAsync()
    {
        Joe = await Engine.CreatePlayerAsync();
        Kim = await Engine.CreatePlayerAsync();
    }
}
