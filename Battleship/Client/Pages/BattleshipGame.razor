@page "/battleshipgame"
@inject IEngine Engine

<h3>BattleshipGame</h3>

<div>
<button @onclick="StartGame">Play</button>
</div>
<label>@winner</label>

<div class="container gridcontainer">
    <div class="row">
        <div class="col-sm-5 grid-column" style="margin-right: 100px">
            <h3>@Player1Name's ships</h3>
            <Grid squares=Player1Grid Size="GridSize"/>
        </div>
        <div class="col-sm-5 grid-column">
            <h3>@Player2Name's ships</h3>
            <Grid squares=Player2Grid Size="GridSize"/>
        </div>
    </div>
    <div class="row" style="margin-top:20px">
        <div class="col-sm-5 grid-column"  style="margin-right: 100px">
            <h3>@Player1Name's shots</h3>
            <Grid squares=Player1OpGrid Size="GridSize" />
        </div>
        <div class="col-sm-5 grid-column">
            <h3>@Player2Name's shots</h3>
            <Grid squares=Player2OpGrid Size="GridSize" />
        </div>
    </div>
</div>

@code {        

    IPlayer Player1;
    IPlayer Player2;
    string winner = string.Empty;

    string Player1Name => Player1 == null ? "player1" : Player1.Name;
    string Player2Name => Player2 == null ? "player2" : Player2.Name;

    SquareStates[,] Player1Grid =>
    Player1 == null ? new SquareStates[10, 10] : Player1.PlayerGrid.GetSquares();
    SquareStates[,] Player1OpGrid =>
        Player1 == null ? new SquareStates[10, 10] : Player1.OpponentGrid.GetSquares();
    SquareStates[,] Player2Grid =>
        Player1 == null ? new SquareStates[10, 10] : Player2.PlayerGrid.GetSquares();
    SquareStates[,] Player2OpGrid =>
        Player1 == null ? new SquareStates[10, 10] : Player2.OpponentGrid.GetSquares();

    int GridSize =>
        Player1 == null ? 10 : Player1.PlayerGrid.Size;

    public async Task StartGame()
    {
        var player1 = Player1;
        var player2 = Player2;
        bool hasShips;

        do
        {
            var tempPlayer = player1;
            player1 = player2;
            player2 = tempPlayer;

            hasShips = Engine.Play(player1, player2);

            await Task.Delay(50);

            StateHasChanged();
        }
        while (hasShips);

        winner = $"WINNER: {player1.Name}";
    }

    protected override async Task OnInitializedAsync()
    {
        Player1 = await Engine.CreatePlayerAsync("Joe");
        Player2 = await Engine.CreatePlayerAsync("Kim");
    }
}
