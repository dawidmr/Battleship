
    <div class="row">
        @for (int hi = 0; hi <= 10; hi++)
        {
            <div class="col-sm">
                @if (hi != 0)
                {
                    @hi
                }
            </div>
        }
    </div>
    @for (int i = 0; i < 10; i++)
    {
        <div class="row">
            <div class="col-sm">
                @GetCharFromInt(i)
            </div>

            @for (int j = 0; j < 10; j++)
            {
                <div class="col-sm @GetFormat(squares[j,i])" style="border: solid 1px black">
                    @GetCharFromSquareState(squares[j, i])
                </div>
            }
        </div>
    }

@code {

    [Parameter]
    public SquareStates[,] squares { get; set; }

    [Parameter]
    public int Size { get; set; }

    private char GetCharFromInt(int number)
    {
        return Convert.ToChar(65 + number);
    }

    private string GetFormat(SquareStates state)
    {
        switch (state)
        {
            case SquareStates.Ship:
                return "bg-primary";
            case SquareStates.HittedShip:
                return "bg-warning";
            case SquareStates.SunkShip:
                return "bg-danger";
            case SquareStates.Virgin:
                return "bg-white";
            case SquareStates.MissedShot:
                return "bg-secondary";
            default:
                return "bg-white";
        }
    }

    private char GetCharFromSquareState(SquareStates state)
    {
        switch(state)
        {
            case SquareStates.Ship:
            case SquareStates.HittedShip:
            case SquareStates.Virgin:
                return ' ';
            case SquareStates.SunkShip:
                return 'X';
            case SquareStates.MissedShot:
                return '*';
            default:
                return '?';
        }
    }
}
